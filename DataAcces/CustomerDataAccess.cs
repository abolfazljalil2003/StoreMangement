using DataAcces.Models;using System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;namespace DataAcces{	public class CustomerDataAccess	{		public ObservableCollection<Customer> customers { get; set; } = new ObservableCollection<Customer>();		public CustomerDataAccess()		{			ReedCustomer();		}		private void ReedCustomer()		{			Customer cu1 = new Customer()			{				FirstName = "imran",				Id = 55,				LastName = "bagheri",				PhoneNumber = 9999999				,				Addres = "shiraz",							};			Customer cu2 = new Customer()			{				FirstName = "mobin",				Id = 56,				LastName = "fallah",				PhoneNumber = 777777			   ,				Addres = "yazd",							};			Customers.Add(cu1);			Customers.Add(cu2);		}		public void AddCustomer(Customer customer)		{			Customers.Add(customer);		}		public void RemoveCustomer(int id)		{			Customer temp = Customers.First(p => p.Id == id);			Customers.Remove(temp);		}		public void EditeCustomer(Customer cu)		{			Customer temp = Customers.First(p => p.Id == cu.Id);			int index = Customers.IndexOf(cu);			Customers[index] = cu;		}		public int GetNextId()		{			int index = Customers.Any() ? Customers.Max(p => p.Id) + 1 : 1;			return index;		}	}}